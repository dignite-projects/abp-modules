@using Dignite.Abp.DynamicForms.Table
@using System.Text.Json;
@inject IFieldComponentSelector fieldComponentSelector
@inherits FieldComponentBase<TableForm,TableConfiguration>

<Field Horizontal="@(!IsChild)">
    <FieldLabel ColumnSize="ColumnSize.Is2.OnDesktop" hidden="@IsChild">@Field.DisplayName</FieldLabel>
    <FieldBody ColumnSize="ColumnSize.Is10.OnDesktop">      
        @if (FormConfiguration.TableColumns.Any())
        {
            <Table>
                <TableHeader>
                    <Blazorise.TableRow>
                        @foreach(var column in FormConfiguration.TableColumns)
                        {
                        <TableHeaderCell>@column.DisplayName</TableHeaderCell>
                        }
                    </Blazorise.TableRow>
                </TableHeader>
                <TableBody>
                    @if(TableRows.Any())
                    {
                        @foreach(var row in TableRows)
                        {
                        <Blazorise.TableRow>
                            @foreach(var column in FormConfiguration.TableColumns)
                            {
                                if (!column.CustomField.FormProviderName.IsNullOrEmpty())
                                {
                                    var component = fieldComponentSelector.Get(column.CustomField.FormProviderName);
                                    var parameters = new Dictionary<string, object>();
                                        parameters.Add("CustomizableObject", row);
                                        parameters.Add("Field", column.CustomField);
                                        parameters.Add("IsChild", true);
                                    <TableRowCell>
                                        <DynamicComponent Type="@component.GetType()" Parameters="@parameters"></DynamicComponent>
                                </TableRowCell>
                                }
                            }
                        </Blazorise.TableRow>
                        }
                    }
                    else
                    {
                        <Blazorise.TableRow>
                            <TableRowCell ColumnSpan="FormConfiguration.TableColumns.Count">
                                No data available
                            </TableRowCell>
                        </Blazorise.TableRow>                        
                    }
                </TableBody>
            </Table>
            }
    </FieldBody>
</Field>
@code{
    public List<Dignite.Abp.DynamicForms.Table.TableRow> TableRows = new List<Dignite.Abp.DynamicForms.Table.TableRow>();

    protected override void OnInitialized()
    {
        base.OnInitialized();
        var value = CustomizableObject.GetField(Field.Name, null);
        if (value != null)
        {
            TableRows = JsonSerializer.Deserialize<List<Dignite.Abp.DynamicForms.Table.TableRow>>(value.ToString());
        }
    }
}