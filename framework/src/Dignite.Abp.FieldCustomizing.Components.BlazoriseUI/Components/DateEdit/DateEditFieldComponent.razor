@using Dignite.Abp.FieldCustomizing.Forms.DateEdit
@inherits FieldComponentBase<DateEditFormProvider,DateEditConfiguration>

<Field Horizontal="@(!HideFieldLable)">
    <FieldLabel ColumnSize="ColumnSize.Is2.OnDesktop" hidden="@HideFieldLable">@CustomizeField.Definition.DisplayName</FieldLabel>
    <FieldBody ColumnSize="ColumnSize.Is10.OnDesktop">
        <Text>
            @if(value!=null)
            {
                @switch(Configuration.InputMode)
                {
                    case Dignite.Abp.FieldCustomizing.Forms.DateEdit.DateInputMode.Date:
                        <span>@value.Value.ToString("d")</span>
                        break;
                    case Dignite.Abp.FieldCustomizing.Forms.DateEdit.DateInputMode.Month:
                        <span>@value.Value.ToString("y")</span>
                        break;
                    default:
                        <span>@value.Value.ToString("U")</span>
                        break;
                }
            }
        </Text>
    </FieldBody>
</Field>

@code{
    private DateTime? value = null;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        if (CustomizeField.Entity.GetField(CustomizeField.Definition.Name, null) != null)
        {
            DateTime convertValue;
            if (DateTime.TryParse(CustomizeField.Entity.GetField(CustomizeField.Definition.Name, null).ToString(), out convertValue))
            {
                value = convertValue;
            }
        }
    }
}