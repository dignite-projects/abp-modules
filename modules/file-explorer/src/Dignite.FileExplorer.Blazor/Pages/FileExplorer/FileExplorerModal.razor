@using Blazorise.SpinKit
@using Dignite.FileExplorer.Files
@using Volo.Abp.AspNetCore.Components.Web.Theming.Layout
@using Dignite.Abp.BlazoriseUI.Components
@inherits AbpCrudPageBase<IFileDescriptorAppService,FileDescriptorDto, Guid, GetFilesInput, CreateFileInput, UpdateFileInput>
<Modal @ref="_modal" Closing="@ClosingModal">
    <ModalContent Size="ModalSize.ExtraLarge" Centered="true">
        <ModalHeader>
            <ModalTitle>@L["FileExplorer"]</ModalTitle>
            <CloseButton Clicked="CloseModal" />
        </ModalHeader>
        <ModalBody>
            <FileEdit Changed="@OnFileChangedAsync" Disabled="@(Files!=null && Files.Any(f=>f.Status != FileUploadStatus.Fail))" Multiple="@Multiple" Filter="@Configuration?.AllowedFileTypeNames?.JoinAsString(",")" />
            <Row NoGutters>
                <Column ColumnSize="ColumnSize.Is3">
                    <AutoHeight ExtraHeight="340">

                    </AutoHeight>
                </Column>
                <Column ColumnSize="ColumnSize.Is9">
                    @* ************************* DATA GRID ************************* *@
                    <ExtensibleDataGrid TItem="FileDescriptorDto" @ref="FileDataGridRef"
                                                                              SelectionMode="Multiple?DataGridSelectionMode.Multiple: DataGridSelectionMode.Single"
                                                                              Data="Entities"
                                                                              ReadData="OnDataGridReadAsync"
                                                                              TotalItems="TotalCount"
                                                                              ShowPager="true"
                                                                              PageSize="PageSize"
                                                                              CurrentPage="@CurrentPage"
                                                                              Columns="@FileTableColumns"
                                                                              ExtraHeight="340">
                    </ExtensibleDataGrid>
                </Column>
            </Row>
            @if (Files != null && Files.Any())
            {
                <Div Position="Position.Fixed.Bottom.Is0.End.Is0" Shadow="Shadow.Large" Margin="Margin.Is5">
                    <Card>
                        <CardHeader>
                            @L["UploadFiles"]
                        </CardHeader>
                        <CardBody>
                            <Table>
                                <TableHeader>
                                    <TableRow>
                                        <TableHeaderCell>@L["FileName"]</TableHeaderCell>
                                        <TableHeaderCell>@L["FileSize"]</TableHeaderCell>
                                        <TableHeaderCell></TableHeaderCell>
                                    </TableRow>
                                </TableHeader>
                                <TableBody>
                                    @foreach (var file in Files)
                                    {
                                        <TableRow>
                                            <TableRowCell>
                                                @file.File.Name
                                                @if (file.Status == FileUploadStatus.Fail)
                                                {
                                                    <Paragraph TextColor="TextColor.Danger">
                                                        @file.ErrorMessage
                                                    </Paragraph>
                                                }
                                            </TableRowCell>
                                            <TableRowCell>@file.File.Size</TableRowCell>
                                            <TableRowCell>                                                
                                                @switch (file.Status)
                                                {
                                                    case FileUploadStatus.Ready:
                                                        <Icon Name="IconName.MoreHorizontal" TextColor="TextColor.Secondary"></Icon>
                                                        break;
                                                    case FileUploadStatus.Progressing:
                                                        <SpinKit Type="SpinKitType.Chase" Size="16px" />
                                                        break;
                                                    case FileUploadStatus.Success:
                                                        <Icon Name="IconName.Check" TextColor="TextColor.Primary"></Icon>
                                                        break;
                                                    default:
                                                        <Icon Name="IconName.TimesCircle" TextColor="TextColor.Danger"></Icon>
                                                        break;
                                                }
                                            </TableRowCell>
                                        </TableRow>
                                    }
                                </TableBody>
                            </Table>
                        </CardBody>
                    </Card>
                </Div>
            }
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Secondary" Clicked="CloseModal">@L["Cancel"]</Button>
            <Button Color="Color.Primary" Clicked="SelectFilesAsync">@L["Select"]</Button>
        </ModalFooter>
    </ModalContent>
</Modal>
